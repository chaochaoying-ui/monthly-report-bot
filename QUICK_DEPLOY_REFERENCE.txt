================================================================================
每日提醒 @ 格式修复 - 快速部署参考卡片
================================================================================

📦 准备工作
────────────────────────────────────────────────────────────────────────────
✅ 本地修复完成
✅ 创建了部署脚本: deploy_fix_to_gcp.sh
✅ 准备部署到 GCP 服务器

================================================================================
🚀 方法 1: 一键部署脚本（推荐）
================================================================================

第 1 步: 上传脚本到 GCP
────────────────────────────────────────────────────────────────────────────
在本地 Windows PowerShell 执行:

gcloud compute scp "f:\monthly_report_bot_link_pack\deploy_fix_to_gcp.sh" ^
    hdi918072@monthly-report-bot:~/deploy_fix_to_gcp.sh ^
    --zone=us-west1-b

第 2 步: 在 GCP 执行脚本
────────────────────────────────────────────────────────────────────────────
在 GCP Web SSH 终端执行:

chmod +x ~/deploy_fix_to_gcp.sh
~/deploy_fix_to_gcp.sh

第 3 步: 验证部署
────────────────────────────────────────────────────────────────────────────
检查飞书群消息，确认:
  ✅ 负责人姓名正确显示（如: @周超, @张三）
  ✅ 点击 @ 可以跳转到用户
  ✅ 负责人收到飞书通知

================================================================================
🔧 方法 2: 手动部署（备用）
================================================================================

在 GCP Web SSH 终端执行以下命令:

# 1. 进入项目目录
cd ~/monthly-report-bot/monthly_report_bot_link_pack

# 2. 备份文件
cp monthly_report_bot_final_interactive.py \
   monthly_report_bot_final_interactive.py.backup

# 3. 创建修复脚本
cat > /tmp/fix.py << 'EOF'
import re
with open("monthly_report_bot_final_interactive.py", 'r', encoding='utf-8') as f:
    content = f.read()

# 修复 @ 格式
content = re.sub(
    r'assignee_mentions\.append\(f"<at id=\\"\{assignee\}\\"></at>"\)',
    r'display_name = get_user_display_name(assignee)\n            assignee_mentions.append(f"<at user_id=\\"{assignee}\\">{display_name}</at>")',
    content
)
content = re.sub(
    r'task_assignees\.append\(f"<at id=\\"\{assignee\}\\"></at>"\)',
    r'display_name = get_user_display_name(assignee)\n                task_assignees.append(f"<at user_id=\\"{assignee}\\">{display_name}</at>")',
    content
)
content = re.sub(
    r'(for assignee in task\["assignees"\]:\s+)assignee_mentions \+= f"<at user_id=\\"\{assignee\}\\"></at> "',
    r'\1display_name = get_user_display_name(assignee)\n                assignee_mentions += f"<at user_id=\\"{assignee}\\">{display_name}</at> "',
    content
)

# 添加客户端初始化
if 'if not init_lark_client():' not in content:
    content = re.sub(
        r'(async def test_daily_reminder\(\):.*?logger\.info\("开始测试每日提醒功能\.\.\."\)\s+)(success = await send_daily_reminder\(\))',
        r'\1\n        if not init_lark_client():\n            logger.error("❌ 飞书客户端初始化失败")\n            return False\n\n        \2',
        content,
        flags=re.DOTALL
    )

with open("monthly_report_bot_final_interactive.py", 'w', encoding='utf-8') as f:
    f.write(content)
print("✅ 修复完成")
EOF

# 4. 执行修复
python3 /tmp/fix.py

# 5. 验证修复
grep -c "display_name = get_user_display_name" monthly_report_bot_final_interactive.py
# 应该输出: 3

# 6. 重启服务
sudo systemctl restart monthly-report-bot

# 7. 测试
source venv/bin/activate
python3 -c "import asyncio; from monthly_report_bot_final_interactive import test_daily_reminder; asyncio.run(test_daily_reminder())"

================================================================================
✅ 验证检查清单
================================================================================

服务器端:
  [ ] 服务运行正常: sudo systemctl status monthly-report-bot
  [ ] 找到 3 处修复: grep -c "display_name = get_user_display_name" ...
  [ ] 测试成功: 显示 "✅ 每日提醒测试成功"

飞书群:
  [ ] 收到每日提醒卡片
  [ ] @ 显示真实姓名（不是空白）
  [ ] 点击 @ 可跳转
  [ ] 负责人收到通知

================================================================================
🔍 快速故障排查
================================================================================

问题: 服务无法启动
────────────────────────────────────────────────────────────────────────────
sudo journalctl -u monthly-report-bot -n 50 --no-pager

问题: @ 仍然显示为空
────────────────────────────────────────────────────────────────────────────
# 检查修复是否应用
grep -n "display_name = get_user_display_name" monthly_report_bot_final_interactive.py

# 应该看到:
# 401:            display_name = get_user_display_name(assignee)
# 461:                display_name = get_user_display_name(assignee)
# 802:                display_name = get_user_display_name(assignee)

问题: 测试失败
────────────────────────────────────────────────────────────────────────────
# 检查环境变量
cd ~/monthly-report-bot/monthly_report_bot_link_pack
cat .env | grep -E "FEISHU_APP_ID|CHAT_ID"

# 手动运行
source venv/bin/activate
python3 monthly_report_bot_final_interactive.py

================================================================================
🔄 回滚命令
================================================================================

cp monthly_report_bot_final_interactive.py.backup \
   monthly_report_bot_final_interactive.py
sudo systemctl restart monthly-report-bot

================================================================================
📚 完整文档
================================================================================

详细指南:
  • README_FIX.md - 主文档
  • GCP_部署修复指令.md - GCP 专用部署指南
  • DEPLOY_FIX_GUIDE.md - 详细部署步骤
  • FIX_AT_FORMAT_SUMMARY.md - 技术细节

自动脚本:
  • deploy_fix_to_gcp.sh - GCP 一键部署脚本
  • apply_fix_to_server.sh - 通用修复脚本

验证脚本:
  • verify_at_format_fix.py - 验证修复是否应用
  • test_daily_reminder_fix.py - 测试修复效果

================================================================================
📞 支持
================================================================================

修复日期: 2025-10-21
修复人员: Claude Code Assistant

如需帮助, 请查看完整文档或收集诊断信息:
  sudo systemctl status monthly-report-bot > ~/debug.log
  sudo journalctl -u monthly-report-bot -n 50 >> ~/debug.log
  cat ~/debug.log

================================================================================
🎉 祝部署顺利！
================================================================================
